<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:p="http://www.springframework.org/schema/p"
      xmlns:context="http://www.springframework.org/schema/context"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd">
  <!-- 引入配置文件 -->
  <context:property-placeholder location="ClassPath:/db.properties"/>
  <!-- 自动扫描所有bean类，即能实例化的所有类 -->
  <context:component-scan base-package="com.iss.buses"/>
  <!-- 配置数据源 -->
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
   <property name="driverClassName" value="${jdbc.driver}"/>
   <property name="url" value="${jdbc.url}"/>
   <property name="username" value="${jdbc.username}"/>
   <property name="password" value="${jdbc.password}"/>
   <property name="initialSize" value="${jdbc.initialSize}"/>
   <property name="maxActive" value="${jdbc.maxActive}"/>
   <property name="maxIdle" value="${jdbc.maxIdle}"/>
   <property name="minIdle" value="${jdbc.minIdle}"/>
   <property name="maxWait" value="${jdbc.maxWait}"/>
   </bean> 
   <!-- spring+mybatis整合 -->
   <!-- 配置一个SqlSessionFactory的对象 -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
   </bean>     
   <!-- dao接口所在包 -->   
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   <property name="basePackage" value="com.iss.buses.dao" />
   <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
   </bean>    
   <!-- 事务管理 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"></property>
   
   </bean>
          
  </beans>        
          
          
          
          
          